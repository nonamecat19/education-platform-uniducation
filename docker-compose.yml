version: "3.9"

services:

#  web-client:


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - /var/lib/rabbitmq
    env_file:
      - ./env/rabbitmq.env
    hostname: rabbitmq

  master-postgres:
    container_name: master-postgres
    image: postgres:14-alpine
    ports:
      - "6000:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    env_file:
      - ./env/postgres.env

  user-postgres:
    container_name: users-postgres
    image: postgres:14-alpine
    ports:
      - "6001:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    env_file:
      - ./env/postgres.env

  schedule-postgres:
    container_name: schedule-postgres
    image: postgres:14-alpine
    ports:
      - "6002:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    env_file:
      - ./env/postgres.env

  portal-postgres:
    container_name: portal-postgres
    image: postgres:14-alpine
    ports:
      - "6003:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    env_file:
      - ./env/postgres.env

  assessment-postgres:
    container_name: assessment-postgres
    image: postgres:14-alpine
    ports:
      - "6004:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    env_file:
      - ./env/postgres.env

  storage-postgres:
    container_name: storage-postgres
    image: postgres:14-alpine
    ports:
      - "6005:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    env_file:
      - ./env/postgres.env

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - local_prom

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    ports:
      - "9091:9100"
    networks:
      - local_prom

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "9000:3000"
    env_file:
      - ./env/grafana.env
    depends_on:
      - prometheus


  users-redis:
    container_name: users-redis
    image: redis:latest
    restart: always
    ports:
      - "6101:6379"
    volumes:
      - ./redis/dаta:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./env/redis.env

  schedule-redis:
    container_name: schedule-redis
    image: redis:latest
    restart: always
    ports:
      - "6102:6379"
    volumes:
      - ./redis/dаta:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./env/redis.env

  portal-redis:
    container_name: portal-redis
    image: redis:latest
    restart: always
    ports:
      - "6103:6379"
    volumes:
      - ./redis/dаta:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./env/redis.env

  assessment-redis:
    container_name: assessment-redis
    image: redis:latest
    restart: always
    ports:
      - "6104:6379"
    volumes:
      - ./redis/dаta:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./env/redis.env

  storage-redis:
    container_name: storage-redis
    image: redis:latest
    restart: always
    ports:
      - "6105:6379"
    volumes:
      - ./redis/dаta:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./env/redis.env

networks:
  local_prom:
    driver: bridge

volumes:
  prometheus_data: { }
